server:
  port: 8080
spring:
  application:
    name: mega-application

  datasource:
    username: postgres
    password: postgres
    url: jdbc:postgresql://localhost:5432/mega_db
    driver-class-name: org.postgresql.Driver
#    datasource name
    name: mega_db_datasource
  liquibase:
    enabled: true
    drop-first: false
    change-log: classpath:/db/changelog/db.changelog-master.xml
  jpa:
    open-in-view: false
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: kafka-mega-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      auto-offset-reset: latest
    producer:
      client-id: kafka-mega-producer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    template:
      default-topic:
    properties:
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY_URL:http://localhost:8081}
#    This property works only if KafkaListener uses autoconfigured DefaultKafkaListener
#    for custom kafkaListenerContainerFactory, needs to set it programmatically by setting up this factory properties
    listener:
      ack-mode: MANUAL
  config:
    import: "classpath:application-management-config.yaml"
logging:
  include-application-name: false
  level:
    org.springframework.kafka.listener.DeadLetterPublishingRecoverer: DEBUG
    org.springframework.kafka.core.KafkaTemplate: TRACE

app:
  kafka:
    topics:
      transaction:
        name: datacenter.business.fct.transaction.v0
        dlt: ${app.kafka.topics.transaction.name}.dlt
        partition: 2

